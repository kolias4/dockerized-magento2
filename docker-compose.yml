version: '3'
services:
  nginx:
    build:
      context: ./.docker/nginx/${NGINX_VERSION}
    ports:
      - 80:8000
    links:
      - phpfpm
      - redis:cache
    volumes:
      - ./magento:/var/www/html          # Keep local directory for Magento
      - sock_data:/sock                  # Named volume
      - nginx_log:/var/log/nginx          # Named volume
      #- ./frontend/${FRONTEND_VENDOR_NAME}:/var/www/html/app/design/frontend/${FRONTEND_VENDOR_NAME}
      #- ./backend/${BACKEND_VENDOR_NAME}:/var/www/html/app/code/${BACKEND_VENDOR_NAME}
    networks:
      - magento

  phpfpm:
    build:
      context: ./.docker/php/${PHP_VERSION}
    links:
      - db
    volumes:
      # - ./.docker/php/${PHP_VERSION}/.composer:/var/www/.composer
      - ./magento:/var/www/html          # Keep local directory for Magento
      - sock_data:/sock                  # Named volume
      - phpfpm_log:/var/log              # Named volume
      #- ./frontend/${FRONTEND_VENDOR_NAME}:/var/www/html/app/design/frontend/${FRONTEND_VENDOR_NAME}
      #- ./backend/${BACKEND_VENDOR_NAME}:/var/www/html/app/code/${BACKEND_VENDOR_NAME}
    networks:
      - magento

  redis:
    image: redis:${REDIS_VERSION}
    restart: on-failure:5
    volumes:
      - redis_data:/data                 # Named volume
    expose:
      - 6379
    networks:
      - magento

  db:
    image: mysql:${MYSQL_VERSION}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    command: ["--log_bin_trust_function_creators=1"]
    volumes:
      - mysql_data:/var/lib/mysql         # Named volume
      - mysql_log:/var/log/mysql          # Named volume
    ports:
      - 3306:3306
    networks:
      - magento

  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - magento

  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    environment:
      - cluster.name=es-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - node.name=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data   # Named volume
      - es_log:/var/log/elasticsearch           # Named volume
    ports:
      - 9200:9200
    networks:
      - magento

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    links:
      - phpfpm
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - magento

networks:
  magento:
    driver: bridge

volumes:
  sock_data:                                  # Named volume for socket data
  nginx_log:                                  # Named volume for Nginx logs
  phpfpm_log:                                 # Named volume for PHP-FPM logs
  redis_data:                                 # Named volume for Redis data
  mysql_data:                                 # Named volume for MySQL data
  mysql_log:                                  # Named volume for MySQL logs
  es_data:                                    # Named volume for Elasticsearch data
  es_log:                                     # Named volume for Elasticsearch logs
