version: '3'
services:
  nginx:
    build:
      context: ./.docker/nginx/${NGINX_VERSION}
    ports:
      - 80:8000
    links:
      - phpfpm
      - redis:cache
    volumes:
      - ./src/magento:/var/www/html
      - ./src/sock_data:/sock
      - ./src/nginx_log:/var/log/nginx
    networks:
      - magento

  phpfpm:
    build:
      context: ./.docker/php/${PHP_VERSION}
    links:
      - db
    volumes:
      - ./.docker/php/${PHP_VERSION}/.composer:/var/www/.composer
      - ./src/magento:/var/www/html
      - ./src/phpfpm_log:/var/log
      - ./src/sock_data:/sock
    networks:
      - magento

  redis:
    image: redis:${REDIS_VERSION}
    restart: on-failure:5
    volumes:
      - ./src/redis_data:/data
    expose:
      - 6379
    networks:
      - magento

  db:
    image: mysql:${MYSQL_VERSION}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./src/mysql_data:/var/lib/mysql
      - ./src/mysql_log:/var/log/mysql
    ports:
      - 3306:3306
    networks:
      - magento

  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    environment:
      - cluster.name=es-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - cluster.initial_master_nodes=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./src/es_data:/usr/share/elasticsearch/data
      - ./src/es_log:/var/log/elasticsearch
    networks:
      - magento

networks:
  magento:
    driver: bridge